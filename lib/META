# OASIS_START
# DO NOT EDIT (digest: 8744f03c92c9b635c7a66256a0357ddf)
version = "2.4.3"
description = "Ethernet, TCP/IPv4 and DHCPv4 library"
requires = "io-page mirage-types ipaddr cstruct mirage-profile bytes"
archive(byte) = "tcpip.cma"
archive(byte, plugin) = "tcpip.cma"
archive(native) = "tcpip.cmxa"
archive(native, plugin) = "tcpip.cmxs"
xen_linkopts = "-ltcpip_xen_stubs"
exists_if = "tcpip.cma"
package "xen" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 archive(byte) = "tcpip_xen.cma"
 archive(byte, plugin) = "tcpip_xen.cma"
 archive(native) = "tcpip_xen.cmxa"
 archive(native, plugin) = "tcpip_xen.cmxs"
 exists_if = "tcpip_xen.cma"
)

package "udpv6-unix" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires =
 "tcpip.udp tcpip.ipv6-unix lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix"
 archive(byte) = "udpv6-unix.cma"
 archive(byte, plugin) = "udpv6-unix.cma"
 archive(native) = "udpv6-unix.cmxa"
 archive(native, plugin) = "udpv6-unix.cmxs"
 exists_if = "udpv6-unix.cma"
)

package "udpv6-socket" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "tcpip.udp lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix"
 archive(byte) = "udpv6-socket.cma"
 archive(byte, plugin) = "udpv6-socket.cma"
 archive(native) = "udpv6-socket.cmxa"
 archive(native, plugin) = "udpv6-socket.cmxs"
 exists_if = "udpv6-socket.cma"
)

package "udpv4-unix" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires =
 "tcpip.udp tcpip.ipv4-unix lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix"
 archive(byte) = "udpv4-unix.cma"
 archive(byte, plugin) = "udpv4-unix.cma"
 archive(native) = "udpv4-unix.cmxa"
 archive(native, plugin) = "udpv4-unix.cmxs"
 exists_if = "udpv4-unix.cma"
)

package "udpv4-socket" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "tcpip.udp lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix"
 archive(byte) = "udpv4-socket.cma"
 archive(byte, plugin) = "udpv4-socket.cma"
 archive(native) = "udpv4-socket.cmxa"
 archive(native, plugin) = "udpv4-socket.cmxs"
 exists_if = "udpv4-socket.cma"
)

package "udp" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "io-page mirage-types ipaddr cstruct lwt tcpip"
 archive(byte) = "udp.cma"
 archive(byte, plugin) = "udp.cma"
 archive(native) = "udp.cmxa"
 archive(native, plugin) = "udp.cmxs"
 exists_if = "udp.cma"
)

package "tcpv6-unix" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires =
 "tcpip.tcp tcpip.ipv6-unix tcpip.channel lwt lwt.unix mirage-unix mirage-clock-unix ipaddr.unix cstruct.lwt io-page.unix"
 archive(byte) = "tcpv6-unix.cma"
 archive(byte, plugin) = "tcpv6-unix.cma"
 archive(native) = "tcpv6-unix.cmxa"
 archive(native, plugin) = "tcpv6-unix.cmxs"
 exists_if = "tcpv6-unix.cma"
)

package "tcpv6-socket" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix"
 archive(byte) = "tcpv6-socket.cma"
 archive(byte, plugin) = "tcpv6-socket.cma"
 archive(native) = "tcpv6-socket.cmxa"
 archive(native, plugin) = "tcpv6-socket.cmxs"
 exists_if = "tcpv6-socket.cma"
)

package "tcpv4-unix" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires =
 "tcpip.tcp tcpip.ipv4-unix tcpip.channel lwt lwt.unix mirage-unix mirage-clock-unix ipaddr.unix cstruct.lwt io-page.unix"
 archive(byte) = "tcpv4-unix.cma"
 archive(byte, plugin) = "tcpv4-unix.cma"
 archive(native) = "tcpv4-unix.cmxa"
 archive(native, plugin) = "tcpv4-unix.cmxs"
 exists_if = "tcpv4-unix.cma"
)

package "tcpv4-socket" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "lwt lwt.unix ipaddr.unix cstruct.lwt io-page.unix"
 archive(byte) = "tcpv4-socket.cma"
 archive(byte, plugin) = "tcpv4-socket.cma"
 archive(native) = "tcpv4-socket.cmxa"
 archive(native, plugin) = "tcpv4-socket.cmxs"
 exists_if = "tcpv4-socket.cma"
)

package "tcp" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires =
 "io-page mirage-types ipaddr cstruct lwt tcpip tcpip.ipv4 tcpip.ipv6"
 archive(byte) = "tcp.cma"
 archive(byte, plugin) = "tcp.cma"
 archive(native) = "tcp.cmxa"
 archive(native, plugin) = "tcp.cmxs"
 exists_if = "tcp.cma"
)

package "stack-unix" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires =
 "tcpip.udpv4-unix tcpip.tcpv4-unix tcpip.udpv6-unix tcpip.tcpv6-unix tcpip.stack-direct lwt lwt.unix ipaddr.unix mirage-unix mirage-clock-unix mirage-console.unix mirage-types.lwt io-page.unix"
 archive(byte) = "tcpip-stack-unix.cma"
 archive(byte, plugin) = "tcpip-stack-unix.cma"
 archive(native) = "tcpip-stack-unix.cmxa"
 archive(native, plugin) = "tcpip-stack-unix.cmxs"
 exists_if = "tcpip-stack-unix.cma"
)

package "stack-socket" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires =
 "tcpip.udpv4-socket tcpip.udpv6-socket tcpip.tcpv4-socket tcpip.tcpv6-socket lwt lwt.unix ipaddr.unix io-page.unix"
 archive(byte) = "tcpip-stack-socket.cma"
 archive(byte, plugin) = "tcpip-stack-socket.cma"
 archive(native) = "tcpip-stack-socket.cmxa"
 archive(native, plugin) = "tcpip-stack-socket.cmxs"
 exists_if = "tcpip-stack-socket.cma"
)

package "stack-direct" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires =
 "io-page mirage-types ipaddr cstruct lwt tcpip.ethif tcpip.udp tcpip.tcp tcpip.dhcpv4"
 archive(byte) = "tcpip-stack-direct.cma"
 archive(byte, plugin) = "tcpip-stack-direct.cma"
 archive(native) = "tcpip-stack-direct.cmxa"
 archive(native, plugin) = "tcpip-stack-direct.cmxs"
 exists_if = "tcpip-stack-direct.cma"
)

package "ipv6-unix" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "tcpip.ethif-unix tcpip.ipv6 lwt lwt.unix"
 archive(byte) = "ipv6-unix.cma"
 archive(byte, plugin) = "ipv6-unix.cma"
 archive(native) = "ipv6-unix.cmxa"
 archive(native, plugin) = "ipv6-unix.cmxs"
 exists_if = "ipv6-unix.cma"
)

package "ipv6" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "io-page mirage-types ipaddr cstruct lwt tcpip"
 archive(byte) = "ipv6.cma"
 archive(byte, plugin) = "ipv6.cma"
 archive(native) = "ipv6.cmxa"
 archive(native, plugin) = "ipv6.cmxs"
 exists_if = "ipv6.cma"
)

package "ipv4-unix" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "tcpip.ethif-unix tcpip.ipv4 lwt lwt.unix"
 archive(byte) = "ipv4-unix.cma"
 archive(byte, plugin) = "ipv4-unix.cma"
 archive(native) = "ipv4-unix.cmxa"
 archive(native, plugin) = "ipv4-unix.cmxs"
 exists_if = "ipv4-unix.cma"
)

package "ipv4" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "io-page mirage-types ipaddr cstruct lwt tcpip"
 archive(byte) = "ipv4.cma"
 archive(byte, plugin) = "ipv4.cma"
 archive(native) = "ipv4.cmxa"
 archive(native, plugin) = "ipv4.cmxs"
 exists_if = "ipv4.cma"
)

package "ethif-unix" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "tcpip.ethif mirage-net-unix lwt lwt.unix"
 archive(byte) = "ethif-unix.cma"
 archive(byte, plugin) = "ethif-unix.cma"
 archive(native) = "ethif-unix.cmxa"
 archive(native, plugin) = "ethif-unix.cmxs"
 exists_if = "ethif-unix.cma"
)

package "ethif" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "tcpip io-page mirage-types ipaddr cstruct lwt"
 archive(byte) = "ethif.cma"
 archive(byte, plugin) = "ethif.cma"
 archive(native) = "ethif.cmxa"
 archive(native, plugin) = "ethif.cmxs"
 exists_if = "ethif.cma"
)

package "dhcpv4" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "io-page bytes mirage-types ipaddr cstruct lwt tcpip.udp"
 archive(byte) = "dhcpv4.cma"
 archive(byte, plugin) = "dhcpv4.cma"
 archive(native) = "dhcpv4.cmxa"
 archive(native, plugin) = "dhcpv4.cmxs"
 exists_if = "dhcpv4.cma"
)

package "channel" (
 version = "2.4.3"
 description = "Ethernet, TCP/IPv4 and DHCPv4 library"
 requires = "io-page mirage-types ipaddr cstruct lwt"
 archive(byte) = "channel.cma"
 archive(byte, plugin) = "channel.cma"
 archive(native) = "channel.cmxa"
 archive(native, plugin) = "channel.cmxs"
 exists_if = "channel.cma"
)
# OASIS_STOP

